name: Build Flutter APK

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: # Allow manual trigger

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.0' # Use stable version
        channel: 'stable'

    - name: Set up Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Create .env file for build
      run: |
        cat > .env << EOF
        # Firebase Configuration (dummy values for build)
        FIREBASE_CREDENTIALS={"type": "service_account", "project_id": "dummy-project"}

        # API Keys (dummy values for build)
        WHISPER_API_KEY=dummy_whisper_key
        GEMINI_API_KEY=dummy_gemini_key

        # Backend Configuration
        BACKEND_HOST=0.0.0.0
        BACKEND_PORT=8000
        LOG_LEVEL=INFO

        # Frontend Configuration
        FRONTEND_URL=http://localhost
        API_BASE_URL=http://localhost:8000
        EOF

    - name: Cache Flutter dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.pub-cache
          **/build
        key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.lock') }}
        restore-keys: |
          ${{ runner.os }}-flutter-

    - name: Install dependencies
      run: flutter pub get

    - name: Analyze code
      run: flutter analyze

    - name: Build APK (with API base URL)
      env:
        API_BASE_URL: ${{ secrets.API_BASE_URL }}
      run: |
        if [ -z "$API_BASE_URL" ]; then echo "API_BASE_URL secret not set - using placeholder"; API_BASE_URL="https://example.com/api"; fi
        flutter build apk --release --dart-define=API_BASE_URL=$API_BASE_URL

    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: app-release.apk
        path: build/app/outputs/flutter-apk/app-release.apk
        retention-days: 30

    - name: Comment APK download link (on PR)
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: 'APK built successfully! Download: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}'
          })

    - name: Comment APK download link (on push)
      if: github.event_name == 'push'
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: 'APK built successfully! Download: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}'
          })
